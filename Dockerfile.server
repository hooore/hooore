# https://turbo.build/repo/docs/guides/tools/docker#example
FROM node:22.5.1-alpine3.19 AS base

FROM base AS builder
RUN apk update
RUN apk add --no-cache libc6-compat
# Set working directory
WORKDIR /app

# Install pnpm with corepack
RUN corepack enable && corepack prepare pnpm@latest --activate

# Enable `pnpm add --global` on Alpine Linux by setting
# home location environment variable to a location already in $PATH
# https://github.com/pnpm/pnpm/issues/784#issuecomment-1518582235
ENV PNPM_HOME=/usr/local/bin

RUN pnpm add --global turbo@^2.0.9

COPY . .
 
# Generate a partial monorepo with a pruned lockfile for a target workspace.
# Pass --build-arg APP_NAME=XXX to override this
ARG APP_NAME="XXX"
RUN turbo prune ${APP_NAME} --docker
 
# Add lockfile and package.json's of isolated subworkspace
FROM base AS installer
RUN apk update
RUN apk add --no-cache libc6-compat
WORKDIR /app
 
# First install the dependencies (as they change less often)
COPY .gitignore .gitignore
COPY --from=builder /app/out/json/ .
COPY --from=builder /app/out/pnpm-lock.yaml ./pnpm-lock.yaml
RUN corepack enable pnpm && pnpm install --frozen-lockfile
 
# Build the project
COPY --from=builder /app/out/full/ .

ARG APP_NAME="XXX"
RUN pnpm turbo run build --filter ${APP_NAME}
 
FROM base AS runner
WORKDIR /app

RUN apk add file

# Don't run production as root
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 hono
USER hono

ARG APP_NAME="XXX"
ENV APP_NAME=${APP_NAME}

# Automatically leverage output traces to reduce image size
COPY --from=installer --chown=hono:nodejs /app/node_modules /app/node_modules
COPY --from=installer --chown=hono:nodejs /app/apps/${APP_NAME}/node_modules /app/apps/${APP_NAME}/node_modules
COPY --from=installer --chown=hono:nodejs /app/apps/${APP_NAME}/dist /app/apps/${APP_NAME}/dist
COPY --from=installer --chown=hono:nodejs /app/apps/${APP_NAME}/package.json /app/apps/${APP_NAME}/package.json

ARG APP_NAME="XXX"
ENV APP_NAME=${APP_NAME}

ARG PG_URL="YYY"
ENV PG_URL=${PG_URL}

EXPOSE ${PORT}

CMD node /app/apps/${APP_NAME}/dist/index.js
